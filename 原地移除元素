给定一个数组 nums 和一个值 val，你需要原地移除所有数值等于 val 的元素，返回移除后数组的新长度。

不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。

元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。

示例 1:

给定 nums = [3,2,2,3], val = 3,

函数应该返回新的长度 2, 并且 nums 中的前两个元素均为 2。

你不需要考虑数组中超出新长度后面的元素。


示例 2:

给定 nums = [0,1,2,2,3,0,4,2], val = 2,

函数应该返回新的长度 5, 并且 nums 中的前五个元素为 0, 1, 3, 0, 4。

注意这五个元素可为任意顺序。

你不需要考虑数组中超出新长度后面的元素。

int removeElement(int* nums, int numsSize, int val){
    int t=0,len=0;
    for(int i=0;i<numsSize-t;)
    {
        if(nums[i]==val)
        {
            for(int j=i;j<numsSize-t;j++)
            {
                nums[j]=nums[j+1];
                t++;
            }
        }
        else
        {
            i++;
            len++;
        }
    }
    return len;
}
这题我在测试上执行正确，但是提交报我内存访问越界，查看力扣指南：
这一类问题的出现，主要有几个原因：
a. 您的程序使用了全局变量或者自定义的类内变量

为了避免这样的问题，一般有两种解决方法：
1、避免申明类内静态变量以及全局变量。
2、在 twoSum 内对全局变量初始化。

b. 您的代码存在细微的问题，如变量没有初始化。
暂未解决。。。。
有些痛苦
