给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。

最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。

你可以假设除了整数 0 之外，这个整数不会以零开头。

示例 1:

输入: [1,2,3]
输出: [1,2,4]
解释: 输入数组表示数字 123。


示例 2:

输入: [4,3,2,1]
输出: [4,3,2,2]
解释: 输入数组表示数字 4321。

int* plusOne(int* digits, int digitsSize, int* returnSize){
    int *num = (int*)malloc(sizeof(int) * (digitsSize + 1));
    num[0] = 1;
    int i;
    for (i = digitsSize - 1; i >= 0; i--){
        if (digits[i] == 9)
            digits[i] = 0;
        else{
            digits[i] += 1;
            break;
        }
    }
    *returnSize = (digits[0] == 0) ? (digitsSize + 1) : digitsSize;
    for (i = 0; i < digitsSize; i++){
        num[i + 1] = digits[i];
    }
    return (digits[0] == 0) ? num : digits;       
}
