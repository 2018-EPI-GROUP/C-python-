/*完成两个多项式的相加操作，利用链式存储结构实现，不重新开辟存储空间*/
#include<stdio.h>
#include<malloc.h>
#include<stdlib.h>
typedef struct ploy
{
	int exp;
	int coef;
	struct ploy *next;
}PNode,*PLinklist;
int Init(PLinklist*head)
{
	*head=(PLinklist)malloc(sizeof(PNode));
	if(*head)
	{
		(*head)->next=NULL;
		return 1;
	}
	else
		return 0;
}
int CreateFromTail(PLinklist *head)/*尾插法创建链表*/
{
	PNode *pTemp,*pHead;
	int c;   /*存放系数*/
	int exp; /*存放指数*/
	int i=1; /*计数器提示用户输入第几项*/
	pHead=*head;
	scanf("%d,%d",&c,&exp);
	while(c!=0)  /*系数为零表示输入结束*/
	{
		pTemp=(PLinklist)malloc(sizeof(PNode));
		if(pTemp)
		{
			pTemp->exp=exp;/*接收指数*/
			pTemp->coef=c;/*接收系数*/
			pTemp->next=NULL;
			pHead->next=pTemp;
			pHead=pTemp;
			scanf("%d,%d",&c,&exp);
		}
		else
			return 0;
	}
	return 1;
}
void Print(PLinklist head)/*输出多项式*/
{
	head=head->next;
	while(head)
	{
		if(head->exp)
			printf("%dx^%d",head->coef,head->exp);
		else
			printf("%d",head->coef);
		if(head->next)
			printf("+");
		else
			break;
		head=head->next;
	}
}
void Polyadd(PLinklist LA,PLinklist LB)/*两个多项式相加，且两个表都是按照指数顺序增长*/
{                                      /*对指数进行对比分三类情况：A<B时将A链到LA后，A==B时比较系数，A>B时将B链到表中*/
	PNode *LA1=LA->next;        /*在LA中移动*/
	PNode *LB1=LB->next;        /*在LB中移动8/
	/*LA与LB充当LA1和LB1的前驱*/
	PNode *temp;                /*保存要删除的结点*/
	int sum=0;                 /*存放系数的和*/
	while(LA1&&LB1)
	{
		if(LA1->exp<LB1->exp)
		{
			LA->next=LA1;
			LA=LA->next;
			LA1=LA1->next;
		}
		else if(LA1->exp==LB1->exp)
		{
			sum=LA1->coef+LB1->coef;
			if(sum)
			{
				LA1->coef=sum;
				LA->next=LA1;
				LA=LA->next;
				LA1=LA1->next;
				temp=LB1;
				LB1=LB1->next;
				free(temp);
			}
			else
			{
				temp=LA1;
				LA1=LA1->next;
				free(temp);
				temp=LB1;
				LB1=LB1->next;
				free(temp);
			}
		}
		else
		{
			LA->next=LB1;
			LA=LA->next;
			LB1=LB1->next;
		}
	}
	if(LA1)
		LA->next=LA1;
	else
		LA->next=LB1;
}
void main()
{
	PLinklist LA;
	PLinklist LB;
	Init(&LA);
	Init(&LB);
	printf("输入第一个多项式的系数，指数（例如10,2）输入0.0结束输入\n");
	CreateFromTail(&LA);
	printf("输入第二个多项式的系数，指数（例如10,2）输入0,0结束输入\n");
	CreateFromTail(&LB);
	Print(LA);
	printf("\n");
	Print(LB);
	printf("\n");
	Polyadd(LA,LB);
	printf("两个多项式相加的结果：\n");
	Print(LA);      /*相加后结果保存在LA中，打印LA*/
	printf("\n");
}
	
